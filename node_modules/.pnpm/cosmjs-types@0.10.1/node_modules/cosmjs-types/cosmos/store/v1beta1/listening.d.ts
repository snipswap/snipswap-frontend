import { ResponseCommit, RequestFinalizeBlock, ResponseFinalizeBlock } from "../../../tendermint/abci/types";
import { BinaryReader, BinaryWriter } from "../../../binary";
import { JsonSafe } from "../../../json-safe";
export declare const protobufPackage = "cosmos.store.v1beta1";
/**
 * StoreKVPair is a KVStore KVPair used for listening to state changes (Sets and Deletes)
 * It optionally includes the StoreKey for the originating KVStore and a Boolean flag to distinguish between Sets and
 * Deletes
 *
 * Since: cosmos-sdk 0.43
 */
export interface StoreKVPair {
    /** the store key for the KVStore this pair originates from */
    storeKey: string;
    /** true indicates a delete operation, false indicates a set operation */
    delete: boolean;
    key: Uint8Array;
    value: Uint8Array;
}
/**
 * BlockMetadata contains all the abci event data of a block
 * the file streamer dump them into files together with the state changes.
 */
export interface BlockMetadata {
    responseCommit?: ResponseCommit;
    requestFinalizeBlock?: RequestFinalizeBlock;
    /** TODO: should we renumber this? */
    responseFinalizeBlock?: ResponseFinalizeBlock;
}
export declare const StoreKVPair: {
    typeUrl: string;
    encode(message: StoreKVPair, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): StoreKVPair;
    fromJSON(object: any): StoreKVPair;
    toJSON(message: StoreKVPair): JsonSafe<StoreKVPair>;
    fromPartial<I extends {
        storeKey?: string | undefined;
        delete?: boolean | undefined;
        key?: Uint8Array | undefined;
        value?: Uint8Array | undefined;
    } & {
        storeKey?: string | undefined;
        delete?: boolean | undefined;
        key?: Uint8Array | undefined;
        value?: Uint8Array | undefined;
    } & Record<Exclude<keyof I, keyof StoreKVPair>, never>>(object: I): StoreKVPair;
};
export declare const BlockMetadata: {
    typeUrl: string;
    encode(message: BlockMetadata, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): BlockMetadata;
    fromJSON(object: any): BlockMetadata;
    toJSON(message: BlockMetadata): JsonSafe<BlockMetadata>;
    fromPartial<I extends {
        responseCommit?: {
            retainHeight?: bigint | undefined;
        } | undefined;
        requestFinalizeBlock?: {
            txs?: Uint8Array[] | undefined;
            decidedLastCommit?: {
                round?: number | undefined;
                votes?: {
                    validator?: {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } | undefined;
                    blockIdFlag?: import("../../../tendermint/types/validator").BlockIDFlag | undefined;
                }[] | undefined;
            } | undefined;
            misbehavior?: {
                type?: import("../../../tendermint/abci/types").MisbehaviorType | undefined;
                validator?: {
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } | undefined;
                height?: bigint | undefined;
                time?: {
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } | undefined;
                totalVotingPower?: bigint | undefined;
            }[] | undefined;
            hash?: Uint8Array | undefined;
            height?: bigint | undefined;
            time?: {
                seconds?: bigint | undefined;
                nanos?: number | undefined;
            } | undefined;
            nextValidatorsHash?: Uint8Array | undefined;
            proposerAddress?: Uint8Array | undefined;
        } | undefined;
        responseFinalizeBlock?: {
            events?: {
                type?: string | undefined;
                attributes?: {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] | undefined;
            txResults?: {
                code?: number | undefined;
                data?: Uint8Array | undefined;
                log?: string | undefined;
                info?: string | undefined;
                gasWanted?: bigint | undefined;
                gasUsed?: bigint | undefined;
                events?: {
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[] | undefined;
                codespace?: string | undefined;
            }[] | undefined;
            validatorUpdates?: {
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: bigint | undefined;
            }[] | undefined;
            consensusParamUpdates?: {
                block?: {
                    maxBytes?: bigint | undefined;
                    maxGas?: bigint | undefined;
                } | undefined;
                evidence?: {
                    maxAgeNumBlocks?: bigint | undefined;
                    maxAgeDuration?: {
                        seconds?: bigint | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    maxBytes?: bigint | undefined;
                } | undefined;
                validator?: {
                    pubKeyTypes?: string[] | undefined;
                } | undefined;
                version?: {
                    app?: bigint | undefined;
                } | undefined;
                abci?: {
                    voteExtensionsEnableHeight?: bigint | undefined;
                } | undefined;
            } | undefined;
            appHash?: Uint8Array | undefined;
        } | undefined;
    } & {
        responseCommit?: ({
            retainHeight?: bigint | undefined;
        } & {
            retainHeight?: bigint | undefined;
        } & Record<Exclude<keyof I["responseCommit"], "retainHeight">, never>) | undefined;
        requestFinalizeBlock?: ({
            txs?: Uint8Array[] | undefined;
            decidedLastCommit?: {
                round?: number | undefined;
                votes?: {
                    validator?: {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } | undefined;
                    blockIdFlag?: import("../../../tendermint/types/validator").BlockIDFlag | undefined;
                }[] | undefined;
            } | undefined;
            misbehavior?: {
                type?: import("../../../tendermint/abci/types").MisbehaviorType | undefined;
                validator?: {
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } | undefined;
                height?: bigint | undefined;
                time?: {
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } | undefined;
                totalVotingPower?: bigint | undefined;
            }[] | undefined;
            hash?: Uint8Array | undefined;
            height?: bigint | undefined;
            time?: {
                seconds?: bigint | undefined;
                nanos?: number | undefined;
            } | undefined;
            nextValidatorsHash?: Uint8Array | undefined;
            proposerAddress?: Uint8Array | undefined;
        } & {
            txs?: (Uint8Array[] & Uint8Array[] & Record<Exclude<keyof I["requestFinalizeBlock"]["txs"], keyof Uint8Array[]>, never>) | undefined;
            decidedLastCommit?: ({
                round?: number | undefined;
                votes?: {
                    validator?: {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } | undefined;
                    blockIdFlag?: import("../../../tendermint/types/validator").BlockIDFlag | undefined;
                }[] | undefined;
            } & {
                round?: number | undefined;
                votes?: ({
                    validator?: {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } | undefined;
                    blockIdFlag?: import("../../../tendermint/types/validator").BlockIDFlag | undefined;
                }[] & ({
                    validator?: {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } | undefined;
                    blockIdFlag?: import("../../../tendermint/types/validator").BlockIDFlag | undefined;
                } & {
                    validator?: ({
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } & {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } & Record<Exclude<keyof I["requestFinalizeBlock"]["decidedLastCommit"]["votes"][number]["validator"], keyof import("../../../tendermint/abci/types").Validator>, never>) | undefined;
                    blockIdFlag?: import("../../../tendermint/types/validator").BlockIDFlag | undefined;
                } & Record<Exclude<keyof I["requestFinalizeBlock"]["decidedLastCommit"]["votes"][number], keyof import("../../../tendermint/abci/types").VoteInfo>, never>)[] & Record<Exclude<keyof I["requestFinalizeBlock"]["decidedLastCommit"]["votes"], keyof {
                    validator?: {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } | undefined;
                    blockIdFlag?: import("../../../tendermint/types/validator").BlockIDFlag | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["requestFinalizeBlock"]["decidedLastCommit"], keyof import("../../../tendermint/abci/types").CommitInfo>, never>) | undefined;
            misbehavior?: ({
                type?: import("../../../tendermint/abci/types").MisbehaviorType | undefined;
                validator?: {
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } | undefined;
                height?: bigint | undefined;
                time?: {
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } | undefined;
                totalVotingPower?: bigint | undefined;
            }[] & ({
                type?: import("../../../tendermint/abci/types").MisbehaviorType | undefined;
                validator?: {
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } | undefined;
                height?: bigint | undefined;
                time?: {
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } | undefined;
                totalVotingPower?: bigint | undefined;
            } & {
                type?: import("../../../tendermint/abci/types").MisbehaviorType | undefined;
                validator?: ({
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } & {
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } & Record<Exclude<keyof I["requestFinalizeBlock"]["misbehavior"][number]["validator"], keyof import("../../../tendermint/abci/types").Validator>, never>) | undefined;
                height?: bigint | undefined;
                time?: ({
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } & {
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } & Record<Exclude<keyof I["requestFinalizeBlock"]["misbehavior"][number]["time"], keyof import("../../../google/protobuf/timestamp").Timestamp>, never>) | undefined;
                totalVotingPower?: bigint | undefined;
            } & Record<Exclude<keyof I["requestFinalizeBlock"]["misbehavior"][number], keyof import("../../../tendermint/abci/types").Misbehavior>, never>)[] & Record<Exclude<keyof I["requestFinalizeBlock"]["misbehavior"], keyof {
                type?: import("../../../tendermint/abci/types").MisbehaviorType | undefined;
                validator?: {
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } | undefined;
                height?: bigint | undefined;
                time?: {
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } | undefined;
                totalVotingPower?: bigint | undefined;
            }[]>, never>) | undefined;
            hash?: Uint8Array | undefined;
            height?: bigint | undefined;
            time?: ({
                seconds?: bigint | undefined;
                nanos?: number | undefined;
            } & {
                seconds?: bigint | undefined;
                nanos?: number | undefined;
            } & Record<Exclude<keyof I["requestFinalizeBlock"]["time"], keyof import("../../../google/protobuf/timestamp").Timestamp>, never>) | undefined;
            nextValidatorsHash?: Uint8Array | undefined;
            proposerAddress?: Uint8Array | undefined;
        } & Record<Exclude<keyof I["requestFinalizeBlock"], keyof RequestFinalizeBlock>, never>) | undefined;
        responseFinalizeBlock?: ({
            events?: {
                type?: string | undefined;
                attributes?: {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] | undefined;
            txResults?: {
                code?: number | undefined;
                data?: Uint8Array | undefined;
                log?: string | undefined;
                info?: string | undefined;
                gasWanted?: bigint | undefined;
                gasUsed?: bigint | undefined;
                events?: {
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[] | undefined;
                codespace?: string | undefined;
            }[] | undefined;
            validatorUpdates?: {
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: bigint | undefined;
            }[] | undefined;
            consensusParamUpdates?: {
                block?: {
                    maxBytes?: bigint | undefined;
                    maxGas?: bigint | undefined;
                } | undefined;
                evidence?: {
                    maxAgeNumBlocks?: bigint | undefined;
                    maxAgeDuration?: {
                        seconds?: bigint | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    maxBytes?: bigint | undefined;
                } | undefined;
                validator?: {
                    pubKeyTypes?: string[] | undefined;
                } | undefined;
                version?: {
                    app?: bigint | undefined;
                } | undefined;
                abci?: {
                    voteExtensionsEnableHeight?: bigint | undefined;
                } | undefined;
            } | undefined;
            appHash?: Uint8Array | undefined;
        } & {
            events?: ({
                type?: string | undefined;
                attributes?: {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] & ({
                type?: string | undefined;
                attributes?: {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            } & {
                type?: string | undefined;
                attributes?: ({
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[] & ({
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                } & {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                } & Record<Exclude<keyof I["responseFinalizeBlock"]["events"][number]["attributes"][number], keyof import("../../../tendermint/abci/types").EventAttribute>, never>)[] & Record<Exclude<keyof I["responseFinalizeBlock"]["events"][number]["attributes"], keyof {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["responseFinalizeBlock"]["events"][number], keyof import("../../../tendermint/abci/types").Event>, never>)[] & Record<Exclude<keyof I["responseFinalizeBlock"]["events"], keyof {
                type?: string | undefined;
                attributes?: {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
            txResults?: ({
                code?: number | undefined;
                data?: Uint8Array | undefined;
                log?: string | undefined;
                info?: string | undefined;
                gasWanted?: bigint | undefined;
                gasUsed?: bigint | undefined;
                events?: {
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[] | undefined;
                codespace?: string | undefined;
            }[] & ({
                code?: number | undefined;
                data?: Uint8Array | undefined;
                log?: string | undefined;
                info?: string | undefined;
                gasWanted?: bigint | undefined;
                gasUsed?: bigint | undefined;
                events?: {
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[] | undefined;
                codespace?: string | undefined;
            } & {
                code?: number | undefined;
                data?: Uint8Array | undefined;
                log?: string | undefined;
                info?: string | undefined;
                gasWanted?: bigint | undefined;
                gasUsed?: bigint | undefined;
                events?: ({
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[] & ({
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                } & {
                    type?: string | undefined;
                    attributes?: ({
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] & ({
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    } & {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    } & Record<Exclude<keyof I["responseFinalizeBlock"]["txResults"][number]["events"][number]["attributes"][number], keyof import("../../../tendermint/abci/types").EventAttribute>, never>)[] & Record<Exclude<keyof I["responseFinalizeBlock"]["txResults"][number]["events"][number]["attributes"], keyof {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["responseFinalizeBlock"]["txResults"][number]["events"][number], keyof import("../../../tendermint/abci/types").Event>, never>)[] & Record<Exclude<keyof I["responseFinalizeBlock"]["txResults"][number]["events"], keyof {
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[]>, never>) | undefined;
                codespace?: string | undefined;
            } & Record<Exclude<keyof I["responseFinalizeBlock"]["txResults"][number], keyof import("../../../tendermint/abci/types").ExecTxResult>, never>)[] & Record<Exclude<keyof I["responseFinalizeBlock"]["txResults"], keyof {
                code?: number | undefined;
                data?: Uint8Array | undefined;
                log?: string | undefined;
                info?: string | undefined;
                gasWanted?: bigint | undefined;
                gasUsed?: bigint | undefined;
                events?: {
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[] | undefined;
                codespace?: string | undefined;
            }[]>, never>) | undefined;
            validatorUpdates?: ({
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: bigint | undefined;
            }[] & ({
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: bigint | undefined;
            } & {
                pubKey?: ({
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["responseFinalizeBlock"]["validatorUpdates"][number]["pubKey"], keyof import("../../../tendermint/crypto/keys").PublicKey>, never>) | undefined;
                power?: bigint | undefined;
            } & Record<Exclude<keyof I["responseFinalizeBlock"]["validatorUpdates"][number], keyof import("../../../tendermint/abci/types").ValidatorUpdate>, never>)[] & Record<Exclude<keyof I["responseFinalizeBlock"]["validatorUpdates"], keyof {
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: bigint | undefined;
            }[]>, never>) | undefined;
            consensusParamUpdates?: ({
                block?: {
                    maxBytes?: bigint | undefined;
                    maxGas?: bigint | undefined;
                } | undefined;
                evidence?: {
                    maxAgeNumBlocks?: bigint | undefined;
                    maxAgeDuration?: {
                        seconds?: bigint | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    maxBytes?: bigint | undefined;
                } | undefined;
                validator?: {
                    pubKeyTypes?: string[] | undefined;
                } | undefined;
                version?: {
                    app?: bigint | undefined;
                } | undefined;
                abci?: {
                    voteExtensionsEnableHeight?: bigint | undefined;
                } | undefined;
            } & {
                block?: ({
                    maxBytes?: bigint | undefined;
                    maxGas?: bigint | undefined;
                } & {
                    maxBytes?: bigint | undefined;
                    maxGas?: bigint | undefined;
                } & Record<Exclude<keyof I["responseFinalizeBlock"]["consensusParamUpdates"]["block"], keyof import("../../../tendermint/types/params").BlockParams>, never>) | undefined;
                evidence?: ({
                    maxAgeNumBlocks?: bigint | undefined;
                    maxAgeDuration?: {
                        seconds?: bigint | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    maxBytes?: bigint | undefined;
                } & {
                    maxAgeNumBlocks?: bigint | undefined;
                    maxAgeDuration?: ({
                        seconds?: bigint | undefined;
                        nanos?: number | undefined;
                    } & {
                        seconds?: bigint | undefined;
                        nanos?: number | undefined;
                    } & Record<Exclude<keyof I["responseFinalizeBlock"]["consensusParamUpdates"]["evidence"]["maxAgeDuration"], keyof import("../../../google/protobuf/duration").Duration>, never>) | undefined;
                    maxBytes?: bigint | undefined;
                } & Record<Exclude<keyof I["responseFinalizeBlock"]["consensusParamUpdates"]["evidence"], keyof import("../../../tendermint/types/params").EvidenceParams>, never>) | undefined;
                validator?: ({
                    pubKeyTypes?: string[] | undefined;
                } & {
                    pubKeyTypes?: (string[] & string[] & Record<Exclude<keyof I["responseFinalizeBlock"]["consensusParamUpdates"]["validator"]["pubKeyTypes"], keyof string[]>, never>) | undefined;
                } & Record<Exclude<keyof I["responseFinalizeBlock"]["consensusParamUpdates"]["validator"], "pubKeyTypes">, never>) | undefined;
                version?: ({
                    app?: bigint | undefined;
                } & {
                    app?: bigint | undefined;
                } & Record<Exclude<keyof I["responseFinalizeBlock"]["consensusParamUpdates"]["version"], "app">, never>) | undefined;
                abci?: ({
                    voteExtensionsEnableHeight?: bigint | undefined;
                } & {
                    voteExtensionsEnableHeight?: bigint | undefined;
                } & Record<Exclude<keyof I["responseFinalizeBlock"]["consensusParamUpdates"]["abci"], "voteExtensionsEnableHeight">, never>) | undefined;
            } & Record<Exclude<keyof I["responseFinalizeBlock"]["consensusParamUpdates"], keyof import("../../../tendermint/types/params").ConsensusParams>, never>) | undefined;
            appHash?: Uint8Array | undefined;
        } & Record<Exclude<keyof I["responseFinalizeBlock"], keyof ResponseFinalizeBlock>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof BlockMetadata>, never>>(object: I): BlockMetadata;
};
