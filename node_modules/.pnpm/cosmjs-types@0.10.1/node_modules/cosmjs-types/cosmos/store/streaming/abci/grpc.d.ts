import { RequestFinalizeBlock, ResponseFinalizeBlock, ResponseCommit } from "../../../../tendermint/abci/types";
import { StoreKVPair } from "../../v1beta1/listening";
import { BinaryReader, BinaryWriter } from "../../../../binary";
import { JsonSafe } from "../../../../json-safe";
export declare const protobufPackage = "cosmos.store.streaming.abci";
/** ListenEndBlockRequest is the request type for the ListenEndBlock RPC method */
export interface ListenFinalizeBlockRequest {
    req?: RequestFinalizeBlock;
    res?: ResponseFinalizeBlock;
}
/** ListenEndBlockResponse is the response type for the ListenEndBlock RPC method */
export interface ListenFinalizeBlockResponse {
}
/** ListenCommitRequest is the request type for the ListenCommit RPC method */
export interface ListenCommitRequest {
    /** explicitly pass in block height as ResponseCommit does not contain this info */
    blockHeight: bigint;
    res?: ResponseCommit;
    changeSet: StoreKVPair[];
}
/** ListenCommitResponse is the response type for the ListenCommit RPC method */
export interface ListenCommitResponse {
}
export declare const ListenFinalizeBlockRequest: {
    typeUrl: string;
    encode(message: ListenFinalizeBlockRequest, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): ListenFinalizeBlockRequest;
    fromJSON(object: any): ListenFinalizeBlockRequest;
    toJSON(message: ListenFinalizeBlockRequest): JsonSafe<ListenFinalizeBlockRequest>;
    fromPartial<I extends {
        req?: {
            txs?: Uint8Array[] | undefined;
            decidedLastCommit?: {
                round?: number | undefined;
                votes?: {
                    validator?: {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } | undefined;
                    blockIdFlag?: import("../../../../tendermint/types/validator").BlockIDFlag | undefined;
                }[] | undefined;
            } | undefined;
            misbehavior?: {
                type?: import("../../../../tendermint/abci/types").MisbehaviorType | undefined;
                validator?: {
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } | undefined;
                height?: bigint | undefined;
                time?: {
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } | undefined;
                totalVotingPower?: bigint | undefined;
            }[] | undefined;
            hash?: Uint8Array | undefined;
            height?: bigint | undefined;
            time?: {
                seconds?: bigint | undefined;
                nanos?: number | undefined;
            } | undefined;
            nextValidatorsHash?: Uint8Array | undefined;
            proposerAddress?: Uint8Array | undefined;
        } | undefined;
        res?: {
            events?: {
                type?: string | undefined;
                attributes?: {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] | undefined;
            txResults?: {
                code?: number | undefined;
                data?: Uint8Array | undefined;
                log?: string | undefined;
                info?: string | undefined;
                gasWanted?: bigint | undefined;
                gasUsed?: bigint | undefined;
                events?: {
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[] | undefined;
                codespace?: string | undefined;
            }[] | undefined;
            validatorUpdates?: {
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: bigint | undefined;
            }[] | undefined;
            consensusParamUpdates?: {
                block?: {
                    maxBytes?: bigint | undefined;
                    maxGas?: bigint | undefined;
                } | undefined;
                evidence?: {
                    maxAgeNumBlocks?: bigint | undefined;
                    maxAgeDuration?: {
                        seconds?: bigint | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    maxBytes?: bigint | undefined;
                } | undefined;
                validator?: {
                    pubKeyTypes?: string[] | undefined;
                } | undefined;
                version?: {
                    app?: bigint | undefined;
                } | undefined;
                abci?: {
                    voteExtensionsEnableHeight?: bigint | undefined;
                } | undefined;
            } | undefined;
            appHash?: Uint8Array | undefined;
        } | undefined;
    } & {
        req?: ({
            txs?: Uint8Array[] | undefined;
            decidedLastCommit?: {
                round?: number | undefined;
                votes?: {
                    validator?: {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } | undefined;
                    blockIdFlag?: import("../../../../tendermint/types/validator").BlockIDFlag | undefined;
                }[] | undefined;
            } | undefined;
            misbehavior?: {
                type?: import("../../../../tendermint/abci/types").MisbehaviorType | undefined;
                validator?: {
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } | undefined;
                height?: bigint | undefined;
                time?: {
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } | undefined;
                totalVotingPower?: bigint | undefined;
            }[] | undefined;
            hash?: Uint8Array | undefined;
            height?: bigint | undefined;
            time?: {
                seconds?: bigint | undefined;
                nanos?: number | undefined;
            } | undefined;
            nextValidatorsHash?: Uint8Array | undefined;
            proposerAddress?: Uint8Array | undefined;
        } & {
            txs?: (Uint8Array[] & Uint8Array[] & Record<Exclude<keyof I["req"]["txs"], keyof Uint8Array[]>, never>) | undefined;
            decidedLastCommit?: ({
                round?: number | undefined;
                votes?: {
                    validator?: {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } | undefined;
                    blockIdFlag?: import("../../../../tendermint/types/validator").BlockIDFlag | undefined;
                }[] | undefined;
            } & {
                round?: number | undefined;
                votes?: ({
                    validator?: {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } | undefined;
                    blockIdFlag?: import("../../../../tendermint/types/validator").BlockIDFlag | undefined;
                }[] & ({
                    validator?: {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } | undefined;
                    blockIdFlag?: import("../../../../tendermint/types/validator").BlockIDFlag | undefined;
                } & {
                    validator?: ({
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } & {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } & Record<Exclude<keyof I["req"]["decidedLastCommit"]["votes"][number]["validator"], keyof import("../../../../tendermint/abci/types").Validator>, never>) | undefined;
                    blockIdFlag?: import("../../../../tendermint/types/validator").BlockIDFlag | undefined;
                } & Record<Exclude<keyof I["req"]["decidedLastCommit"]["votes"][number], keyof import("../../../../tendermint/abci/types").VoteInfo>, never>)[] & Record<Exclude<keyof I["req"]["decidedLastCommit"]["votes"], keyof {
                    validator?: {
                        address?: Uint8Array | undefined;
                        power?: bigint | undefined;
                    } | undefined;
                    blockIdFlag?: import("../../../../tendermint/types/validator").BlockIDFlag | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["req"]["decidedLastCommit"], keyof import("../../../../tendermint/abci/types").CommitInfo>, never>) | undefined;
            misbehavior?: ({
                type?: import("../../../../tendermint/abci/types").MisbehaviorType | undefined;
                validator?: {
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } | undefined;
                height?: bigint | undefined;
                time?: {
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } | undefined;
                totalVotingPower?: bigint | undefined;
            }[] & ({
                type?: import("../../../../tendermint/abci/types").MisbehaviorType | undefined;
                validator?: {
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } | undefined;
                height?: bigint | undefined;
                time?: {
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } | undefined;
                totalVotingPower?: bigint | undefined;
            } & {
                type?: import("../../../../tendermint/abci/types").MisbehaviorType | undefined;
                validator?: ({
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } & {
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } & Record<Exclude<keyof I["req"]["misbehavior"][number]["validator"], keyof import("../../../../tendermint/abci/types").Validator>, never>) | undefined;
                height?: bigint | undefined;
                time?: ({
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } & {
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } & Record<Exclude<keyof I["req"]["misbehavior"][number]["time"], keyof import("../../../../google/protobuf/timestamp").Timestamp>, never>) | undefined;
                totalVotingPower?: bigint | undefined;
            } & Record<Exclude<keyof I["req"]["misbehavior"][number], keyof import("../../../../tendermint/abci/types").Misbehavior>, never>)[] & Record<Exclude<keyof I["req"]["misbehavior"], keyof {
                type?: import("../../../../tendermint/abci/types").MisbehaviorType | undefined;
                validator?: {
                    address?: Uint8Array | undefined;
                    power?: bigint | undefined;
                } | undefined;
                height?: bigint | undefined;
                time?: {
                    seconds?: bigint | undefined;
                    nanos?: number | undefined;
                } | undefined;
                totalVotingPower?: bigint | undefined;
            }[]>, never>) | undefined;
            hash?: Uint8Array | undefined;
            height?: bigint | undefined;
            time?: ({
                seconds?: bigint | undefined;
                nanos?: number | undefined;
            } & {
                seconds?: bigint | undefined;
                nanos?: number | undefined;
            } & Record<Exclude<keyof I["req"]["time"], keyof import("../../../../google/protobuf/timestamp").Timestamp>, never>) | undefined;
            nextValidatorsHash?: Uint8Array | undefined;
            proposerAddress?: Uint8Array | undefined;
        } & Record<Exclude<keyof I["req"], keyof RequestFinalizeBlock>, never>) | undefined;
        res?: ({
            events?: {
                type?: string | undefined;
                attributes?: {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] | undefined;
            txResults?: {
                code?: number | undefined;
                data?: Uint8Array | undefined;
                log?: string | undefined;
                info?: string | undefined;
                gasWanted?: bigint | undefined;
                gasUsed?: bigint | undefined;
                events?: {
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[] | undefined;
                codespace?: string | undefined;
            }[] | undefined;
            validatorUpdates?: {
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: bigint | undefined;
            }[] | undefined;
            consensusParamUpdates?: {
                block?: {
                    maxBytes?: bigint | undefined;
                    maxGas?: bigint | undefined;
                } | undefined;
                evidence?: {
                    maxAgeNumBlocks?: bigint | undefined;
                    maxAgeDuration?: {
                        seconds?: bigint | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    maxBytes?: bigint | undefined;
                } | undefined;
                validator?: {
                    pubKeyTypes?: string[] | undefined;
                } | undefined;
                version?: {
                    app?: bigint | undefined;
                } | undefined;
                abci?: {
                    voteExtensionsEnableHeight?: bigint | undefined;
                } | undefined;
            } | undefined;
            appHash?: Uint8Array | undefined;
        } & {
            events?: ({
                type?: string | undefined;
                attributes?: {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] & ({
                type?: string | undefined;
                attributes?: {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            } & {
                type?: string | undefined;
                attributes?: ({
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[] & ({
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                } & {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                } & Record<Exclude<keyof I["res"]["events"][number]["attributes"][number], keyof import("../../../../tendermint/abci/types").EventAttribute>, never>)[] & Record<Exclude<keyof I["res"]["events"][number]["attributes"], keyof {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["res"]["events"][number], keyof import("../../../../tendermint/abci/types").Event>, never>)[] & Record<Exclude<keyof I["res"]["events"], keyof {
                type?: string | undefined;
                attributes?: {
                    key?: string | undefined;
                    value?: string | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
            txResults?: ({
                code?: number | undefined;
                data?: Uint8Array | undefined;
                log?: string | undefined;
                info?: string | undefined;
                gasWanted?: bigint | undefined;
                gasUsed?: bigint | undefined;
                events?: {
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[] | undefined;
                codespace?: string | undefined;
            }[] & ({
                code?: number | undefined;
                data?: Uint8Array | undefined;
                log?: string | undefined;
                info?: string | undefined;
                gasWanted?: bigint | undefined;
                gasUsed?: bigint | undefined;
                events?: {
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[] | undefined;
                codespace?: string | undefined;
            } & {
                code?: number | undefined;
                data?: Uint8Array | undefined;
                log?: string | undefined;
                info?: string | undefined;
                gasWanted?: bigint | undefined;
                gasUsed?: bigint | undefined;
                events?: ({
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[] & ({
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                } & {
                    type?: string | undefined;
                    attributes?: ({
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] & ({
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    } & {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    } & Record<Exclude<keyof I["res"]["txResults"][number]["events"][number]["attributes"][number], keyof import("../../../../tendermint/abci/types").EventAttribute>, never>)[] & Record<Exclude<keyof I["res"]["txResults"][number]["events"][number]["attributes"], keyof {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["res"]["txResults"][number]["events"][number], keyof import("../../../../tendermint/abci/types").Event>, never>)[] & Record<Exclude<keyof I["res"]["txResults"][number]["events"], keyof {
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[]>, never>) | undefined;
                codespace?: string | undefined;
            } & Record<Exclude<keyof I["res"]["txResults"][number], keyof import("../../../../tendermint/abci/types").ExecTxResult>, never>)[] & Record<Exclude<keyof I["res"]["txResults"], keyof {
                code?: number | undefined;
                data?: Uint8Array | undefined;
                log?: string | undefined;
                info?: string | undefined;
                gasWanted?: bigint | undefined;
                gasUsed?: bigint | undefined;
                events?: {
                    type?: string | undefined;
                    attributes?: {
                        key?: string | undefined;
                        value?: string | undefined;
                        index?: boolean | undefined;
                    }[] | undefined;
                }[] | undefined;
                codespace?: string | undefined;
            }[]>, never>) | undefined;
            validatorUpdates?: ({
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: bigint | undefined;
            }[] & ({
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: bigint | undefined;
            } & {
                pubKey?: ({
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["res"]["validatorUpdates"][number]["pubKey"], keyof import("../../../../tendermint/crypto/keys").PublicKey>, never>) | undefined;
                power?: bigint | undefined;
            } & Record<Exclude<keyof I["res"]["validatorUpdates"][number], keyof import("../../../../tendermint/abci/types").ValidatorUpdate>, never>)[] & Record<Exclude<keyof I["res"]["validatorUpdates"], keyof {
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: bigint | undefined;
            }[]>, never>) | undefined;
            consensusParamUpdates?: ({
                block?: {
                    maxBytes?: bigint | undefined;
                    maxGas?: bigint | undefined;
                } | undefined;
                evidence?: {
                    maxAgeNumBlocks?: bigint | undefined;
                    maxAgeDuration?: {
                        seconds?: bigint | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    maxBytes?: bigint | undefined;
                } | undefined;
                validator?: {
                    pubKeyTypes?: string[] | undefined;
                } | undefined;
                version?: {
                    app?: bigint | undefined;
                } | undefined;
                abci?: {
                    voteExtensionsEnableHeight?: bigint | undefined;
                } | undefined;
            } & {
                block?: ({
                    maxBytes?: bigint | undefined;
                    maxGas?: bigint | undefined;
                } & {
                    maxBytes?: bigint | undefined;
                    maxGas?: bigint | undefined;
                } & Record<Exclude<keyof I["res"]["consensusParamUpdates"]["block"], keyof import("../../../../tendermint/types/params").BlockParams>, never>) | undefined;
                evidence?: ({
                    maxAgeNumBlocks?: bigint | undefined;
                    maxAgeDuration?: {
                        seconds?: bigint | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    maxBytes?: bigint | undefined;
                } & {
                    maxAgeNumBlocks?: bigint | undefined;
                    maxAgeDuration?: ({
                        seconds?: bigint | undefined;
                        nanos?: number | undefined;
                    } & {
                        seconds?: bigint | undefined;
                        nanos?: number | undefined;
                    } & Record<Exclude<keyof I["res"]["consensusParamUpdates"]["evidence"]["maxAgeDuration"], keyof import("../../../../google/protobuf/duration").Duration>, never>) | undefined;
                    maxBytes?: bigint | undefined;
                } & Record<Exclude<keyof I["res"]["consensusParamUpdates"]["evidence"], keyof import("../../../../tendermint/types/params").EvidenceParams>, never>) | undefined;
                validator?: ({
                    pubKeyTypes?: string[] | undefined;
                } & {
                    pubKeyTypes?: (string[] & string[] & Record<Exclude<keyof I["res"]["consensusParamUpdates"]["validator"]["pubKeyTypes"], keyof string[]>, never>) | undefined;
                } & Record<Exclude<keyof I["res"]["consensusParamUpdates"]["validator"], "pubKeyTypes">, never>) | undefined;
                version?: ({
                    app?: bigint | undefined;
                } & {
                    app?: bigint | undefined;
                } & Record<Exclude<keyof I["res"]["consensusParamUpdates"]["version"], "app">, never>) | undefined;
                abci?: ({
                    voteExtensionsEnableHeight?: bigint | undefined;
                } & {
                    voteExtensionsEnableHeight?: bigint | undefined;
                } & Record<Exclude<keyof I["res"]["consensusParamUpdates"]["abci"], "voteExtensionsEnableHeight">, never>) | undefined;
            } & Record<Exclude<keyof I["res"]["consensusParamUpdates"], keyof import("../../../../tendermint/types/params").ConsensusParams>, never>) | undefined;
            appHash?: Uint8Array | undefined;
        } & Record<Exclude<keyof I["res"], keyof ResponseFinalizeBlock>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof ListenFinalizeBlockRequest>, never>>(object: I): ListenFinalizeBlockRequest;
};
export declare const ListenFinalizeBlockResponse: {
    typeUrl: string;
    encode(_: ListenFinalizeBlockResponse, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): ListenFinalizeBlockResponse;
    fromJSON(_: any): ListenFinalizeBlockResponse;
    toJSON(_: ListenFinalizeBlockResponse): JsonSafe<ListenFinalizeBlockResponse>;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): ListenFinalizeBlockResponse;
};
export declare const ListenCommitRequest: {
    typeUrl: string;
    encode(message: ListenCommitRequest, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): ListenCommitRequest;
    fromJSON(object: any): ListenCommitRequest;
    toJSON(message: ListenCommitRequest): JsonSafe<ListenCommitRequest>;
    fromPartial<I extends {
        blockHeight?: bigint | undefined;
        res?: {
            retainHeight?: bigint | undefined;
        } | undefined;
        changeSet?: {
            storeKey?: string | undefined;
            delete?: boolean | undefined;
            key?: Uint8Array | undefined;
            value?: Uint8Array | undefined;
        }[] | undefined;
    } & {
        blockHeight?: bigint | undefined;
        res?: ({
            retainHeight?: bigint | undefined;
        } & {
            retainHeight?: bigint | undefined;
        } & Record<Exclude<keyof I["res"], "retainHeight">, never>) | undefined;
        changeSet?: ({
            storeKey?: string | undefined;
            delete?: boolean | undefined;
            key?: Uint8Array | undefined;
            value?: Uint8Array | undefined;
        }[] & ({
            storeKey?: string | undefined;
            delete?: boolean | undefined;
            key?: Uint8Array | undefined;
            value?: Uint8Array | undefined;
        } & {
            storeKey?: string | undefined;
            delete?: boolean | undefined;
            key?: Uint8Array | undefined;
            value?: Uint8Array | undefined;
        } & Record<Exclude<keyof I["changeSet"][number], keyof StoreKVPair>, never>)[] & Record<Exclude<keyof I["changeSet"], keyof {
            storeKey?: string | undefined;
            delete?: boolean | undefined;
            key?: Uint8Array | undefined;
            value?: Uint8Array | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof ListenCommitRequest>, never>>(object: I): ListenCommitRequest;
};
export declare const ListenCommitResponse: {
    typeUrl: string;
    encode(_: ListenCommitResponse, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): ListenCommitResponse;
    fromJSON(_: any): ListenCommitResponse;
    toJSON(_: ListenCommitResponse): JsonSafe<ListenCommitResponse>;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): ListenCommitResponse;
};
