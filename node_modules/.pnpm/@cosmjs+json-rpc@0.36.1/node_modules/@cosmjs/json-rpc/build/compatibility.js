"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isJsonCompatibleValue = isJsonCompatibleValue;
exports.isJsonCompatibleArray = isJsonCompatibleArray;
exports.isJsonCompatibleDictionary = isJsonCompatibleDictionary;
function isJsonCompatibleValue(value) {
    if (typeof value === "string" ||
        typeof value === "number" ||
        typeof value === "boolean" ||
        value === null ||
        // eslint-disable-next-line @typescript-eslint/no-use-before-define
        isJsonCompatibleArray(value) ||
        // eslint-disable-next-line @typescript-eslint/no-use-before-define
        isJsonCompatibleDictionary(value)) {
        return true;
    }
    else {
        return false;
    }
}
function isJsonCompatibleArray(value) {
    if (!Array.isArray(value)) {
        return false;
    }
    for (const item of value) {
        if (!isJsonCompatibleValue(item)) {
            return false;
        }
    }
    // all items okay
    return true;
}
function isJsonCompatibleDictionary(value) {
    if (typeof value !== "object" || value === null) {
        // value must be a non-null object
        return false;
    }
    // Exclude special kind of objects like Array, Date or Uint8Array
    // Object.prototype.toString() returns a specified value:
    // http://www.ecma-international.org/ecma-262/7.0/index.html#sec-object.prototype.tostring
    if (Object.prototype.toString.call(value) !== "[object Object]") {
        return false;
    }
    return Object.values(value).every(isJsonCompatibleValue);
}
//# sourceMappingURL=compatibility.js.map